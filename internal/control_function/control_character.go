package controlfunction

var controlCharacter = map[rune]FunctionName{
	0x00: NUL,
	0x01: SOH,
	0x02: STX,
	0x03: ETX,
	0x04: EOT,
	0x05: ENQ,
	0x06: ACK,
	0x07: BEL,
	0x08: BS,
	0x09: HT,
	0x0a: LF,
	0x0b: VT,
	0x0c: FF,
	0x0d: CR,
	0x0e: SO,
	0x0f: SI,
	0x10: DLE,
	0x11: DC1,
	0x12: DC2,
	0x13: DC3,
	0x14: DC4,
	0x15: NAK,
	0x16: SYN,
	0x17: ETB,
	0x18: CAN,
	0x19: EM,
	0x1a: SUB,
	0x1c: FS,
	0x1d: GS,
	0x1e: RS,
	0x1f: US,
	0x7f: DEL,
	0x82: BPH,
	0x83: NBH,
	0x84: IND,
	0x85: NEL,
	0x86: SSA,
	0x87: ESA,
	0x88: HTS,
	0x89: HTJ,
	0x8a: VTS,
	0x8b: PLD,
	0x8c: PLU,
	0x8d: RI,
	0x8e: SS2,
	0x8f: SS3,
	0x91: PU1,
	0x92: PU2,
	0x93: STS,
	0x94: CCH,
	0x95: MW,
	0x96: SPA,
	0x97: EPA,
	0x98: SOS,
	0x9a: DECID,
	0x9c: ST,
}

func IsControlCharacter(r rune) bool {
	return (r < 0x20) || (r > 0x7e && r < 0xa0)
}

func ControlCharacter(r rune) (name FunctionName, isEnd bool) {
	if r == 0x1b || isC1ControlSequence(r) {
		return -1, false
	}

	if val, ok := controlCharacter[r]; ok {
		return val, true
	}

	return -1, true
}
